<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Spanning Tree Protocol on Cisco Skills</title>
    <link>https://ciscoskills.net/tags/spanning-tree-protocol/</link>
    <description>Recent content in Spanning Tree Protocol on Cisco Skills</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 02 Jan 2019 15:30:45 +0000</lastBuildDate><atom:link href="https://ciscoskills.net/tags/spanning-tree-protocol/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Oh...Spanning Tree</title>
      <link>https://ciscoskills.net/2019/01/02/oh...spanning-tree/</link>
      <pubDate>Wed, 02 Jan 2019 15:30:45 +0000</pubDate>
      
      <guid>https://ciscoskills.net/2019/01/02/oh...spanning-tree/</guid>
      <description>
        
          &lt;p&gt;It&#39;s the &amp;quot;S&amp;quot; word we don&#39;t like to hear, and often times it has degraded networks or even took them down entirely.  (&lt;a href=&#34;https://ciscoskills.net/files/2019/01/All-Systems-Down.pdf/&#34;&gt;All Systems Down&lt;/a&gt; - an older but classic story) It&#39;s also one of those things that nobody really likes, we even had network companies, as well as IEEE &lt;strong&gt;try&lt;/strong&gt; to replace it with something else. Remember the names like TRILL, and IEEE 802.1aq (SPB) or Cisco&#39;s FabicPath technologies? You had all of these different flavors that showed a lot progress, but they never really took off for one reason or another. The funny part is this protocol we are all trying kill off is still alive and doing well, so let&#39;s look at spanning tree in the meantime because you will likely run into it.&lt;/p&gt;
&lt;p&gt;Remember there are multiple types of spanning tree protocols but they all have a common theme to them and in this post we are going to be focusing on those common themes. If you need a refresher about the reasons and basic functions of spanning tree you can check out these posts I did quite a while ago.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://ciscoskills.net/2011/08/10/the-beginnings-of-layer-two-redundancy/&#34;&gt;The Beginnings of Layer Two Redundancy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://ciscoskills.net/2011/09/07/the-middle-of-layer-two-redundancy/&#34;&gt;The Middle of Layer Two Redundancy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ciscoskills.net/2011/09/14/the-%e2%80%9cending%e2%80%9d-of-layer-two-redundancy//&#34;&gt;The “Ending” of Layer Two Redundancy&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So we should already know that by default spanning tree is enabled on all ports when the switch has blank config. There are of course tweaks we can do to adjust convergence times like using RSTP, if thirty seconds is too long, using portfast when there is not another switch downstream, lots of customization. Here is a simple topology, two switches two links, one of links will be blocked otherwise expect loops and network inconsistency.
&lt;img src=&#34;https://ciscoskills.net/images/2018/12/simple-switch.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Out of the box STP will protect you from loops, and a simple way to figure what type of spanning tree protocol is running as well as to figure out who is root you can use this command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt; 1&lt;/span&gt;SW2#show spanning-tree 
&lt;span class=&#34;ln&#34;&gt; 2&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 3&lt;/span&gt;VLAN0001
&lt;span class=&#34;ln&#34;&gt; 4&lt;/span&gt;  Spanning tree enabled protocol rstp
&lt;span class=&#34;ln&#34;&gt; 5&lt;/span&gt;  Root ID    Priority    32769
&lt;span class=&#34;ln&#34;&gt; 6&lt;/span&gt;             Address     aabb.cc00.0200
&lt;span class=&#34;ln&#34;&gt; 7&lt;/span&gt;             This bridge is the root
&lt;span class=&#34;ln&#34;&gt; 8&lt;/span&gt;             Hello Time   2 sec  Max Age 20 sec  Forward Delay 15 sec
&lt;span class=&#34;ln&#34;&gt; 9&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;10&lt;/span&gt;  Bridge ID  Priority    32769  (priority 32768 sys-id-ext 1)
&lt;span class=&#34;ln&#34;&gt;11&lt;/span&gt;             Address     aabb.cc00.0200
&lt;span class=&#34;ln&#34;&gt;12&lt;/span&gt;             Hello Time   2 sec  Max Age 20 sec  Forward Delay 15 sec
&lt;span class=&#34;ln&#34;&gt;13&lt;/span&gt;             Aging Time  300 sec
&lt;span class=&#34;ln&#34;&gt;14&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;15&lt;/span&gt;Interface           Role Sts Cost      Prio.Nbr Type
&lt;span class=&#34;ln&#34;&gt;16&lt;/span&gt;------------------- ---- --- --------- -------- ----------------------
&lt;span class=&#34;ln&#34;&gt;17&lt;/span&gt;Et0/0               Desg FWD 100       128.1    P2p
&lt;span class=&#34;ln&#34;&gt;18&lt;/span&gt;Et0/1               Desg FWD 100       128.2    P2p
&lt;span class=&#34;ln&#34;&gt;19&lt;/span&gt;Et0/2               Desg FWD 100       128.3    P2p
&lt;span class=&#34;ln&#34;&gt;20&lt;/span&gt;Et0/3               Desg FWD 100       128.4    P2p
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We can see that we are on the root bridge, by looking at &lt;strong&gt;Root ID&lt;/strong&gt; information. This shows information about who is root and in this case we are on the root switch, seeing the message &lt;em&gt;This bridge is the root&lt;/em&gt;, confirms that. We can also see the type of spanning tree protocol we are running, which is RSTP. Running the command on the other switch, that is not root we can the BLK status on one of its ports (Et0/1) which is what we are expecting. We can also see who is root. If we look at the &lt;strong&gt;Bridge ID&lt;/strong&gt; that&#39;s the local switch we are on. Notice when you are the root switch both the Root ID and Bridge match. So our topology looks like something like this:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://ciscoskills.net/images/2018/12/simple-switch-blk-1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt; 1&lt;/span&gt;SW1#show spanning-tree 
&lt;span class=&#34;ln&#34;&gt; 2&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 3&lt;/span&gt;VLAN0001
&lt;span class=&#34;ln&#34;&gt; 4&lt;/span&gt;  Spanning tree enabled protocol rstp
&lt;span class=&#34;ln&#34;&gt; 5&lt;/span&gt;  Root ID    Priority    32769
&lt;span class=&#34;ln&#34;&gt; 6&lt;/span&gt;             Address     aabb.cc00.0200
&lt;span class=&#34;ln&#34;&gt; 7&lt;/span&gt;             Cost        100
&lt;span class=&#34;ln&#34;&gt; 8&lt;/span&gt;             Port        1 (Ethernet0/0)
&lt;span class=&#34;ln&#34;&gt; 9&lt;/span&gt;             Hello Time   2 sec  Max Age 20 sec  Forward Delay 15 sec
&lt;span class=&#34;ln&#34;&gt;10&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;11&lt;/span&gt;  Bridge ID  Priority    32769  (priority 32768 sys-id-ext 1)
&lt;span class=&#34;ln&#34;&gt;12&lt;/span&gt;             Address     aabb.cc00.0300
&lt;span class=&#34;ln&#34;&gt;13&lt;/span&gt;             Hello Time   2 sec  Max Age 20 sec  Forward Delay 15 sec
&lt;span class=&#34;ln&#34;&gt;14&lt;/span&gt;             Aging Time  300 sec
&lt;span class=&#34;ln&#34;&gt;15&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;16&lt;/span&gt;Interface           Role Sts Cost      Prio.Nbr Type
&lt;span class=&#34;ln&#34;&gt;17&lt;/span&gt;------------------- ---- --- --------- -------- ----------------------
&lt;span class=&#34;ln&#34;&gt;18&lt;/span&gt;Et0/0               Root FWD 100       128.1    P2p
&lt;span class=&#34;ln&#34;&gt;19&lt;/span&gt;Et0/1               Altn BLK 100       128.2    P2p
&lt;span class=&#34;ln&#34;&gt;20&lt;/span&gt;Et0/2               Desg FWD 100       128.3    P2p
&lt;span class=&#34;ln&#34;&gt;21&lt;/span&gt;Et0/3               Desg FWD 100       128.4    P2p
&lt;span class=&#34;ln&#34;&gt;22&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;So by default spanning tree helped us block a redundant path without us really doing anything. So why bother with it? Well there is always fine tuning like turning on portfast which is used for edge devices, timers for STP to make it converge faster. There are also some protections that should be enabled like using BPDU guard which help guard the spanning tree topology from introducing unauthorized devices from sending BPDUs and usually used on access ports. Another one is Root guard which is used to help protect the root bridge from changing. Root guard is similar to BPDU guard but I like to think this protection is for us network engineers for when we introduce a switch into the network that somehow as a lower priority than the existing root bridge we can protect the network from changing the STP topology.&lt;/p&gt;
&lt;h2 id=&#34;failures&#34;&gt;Failures&lt;/h2&gt;
&lt;p&gt;Am I doing a good job of making this protocol shine? Well like everything there is always another side of it and I would say some of the failures can be a misconfiguration, software incompatibilities/bugs (which is more common than you would think) and overgrowth of the STP design. When this happens the STP topology can become disruptive to the entire layer two design while trying to reconverge into a new shape, meanwhile switch CPUs hit all time highs and network availability hits all zeros. Another valid point is its a waste of money, you buy two of everything but you can&#39;t use both at the same time because you can&#39;t have multiple L2 paths. Sure you can add MLAGs/vPCs but spanning tree is still running and if that protocol becomes unstable, or changes the topology it has the potential to still be disruptive. ...and this is why a lot people dislike this technology, It really wasn&#39;t designed for high-availability, multi-path, layer two domains.&lt;/p&gt;
&lt;h2 id=&#34;move-up-a-layer&#34;&gt;Move up a layer?&lt;/h2&gt;
&lt;p&gt;Traditionally L2/L3 boundary is at the distribution/aggregation layer of the network, but this traditional design is changing to IP routing at the access layer (Routed Access Layer) to remove spanning tree However this may work well for client/end-user access, this type of design fails at the data center. You may have racks of servers in your data center, you want the maximum amount a flexibility to move hardware around as well as add additional hardware in the future.  If you did a routed access layer at the data center, you start to lock yourself in and although its 2019 a lot applications still operate at a layer two level and even if the apps you are running don&#39;t have that problem you run into scalability issues.&lt;/p&gt;
&lt;h2 id=&#34;smoke-and-mirrors&#34;&gt;Smoke and Mirrors?&lt;/h2&gt;
&lt;p&gt;So where&#39;s the magic? How do you use a reliable layer three network like you did in on the client/end-user side but put it in a data center? Think network overlays like VxLAN or BGP EVPN, (EVPN BGP),  (order does not matter, they&#39;re the same thing) ;) . Basically these are network overlay technologies, you have you underlayer network that is running and you put this technology on top of that network, I call it network virtualization but you may have also heard SDN, (Software Define Networking). Whatever you want to call it this is how you kill spanning tree. Spanning tree by default just runs on a layer two network, we saw that from the beginning. So you remove layer two from the entire stack and then overlay an additional network on top of that. Using these type of technologies your applications don&#39;t know the difference. Another helpful post I saw when reading about overlay networks was from David Varnum&#39;s post about how Arista Networks uses BGP EVPN, pretty neat technology, if interested.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://overlaid.net/2018/08/27/arista-bgp-evpn-overview-and-concepts/&#34;&gt;Arista BGP EVPN – Overview and Concepts&lt;/a&gt;&lt;/p&gt;

        
      </description>
    </item>
    
    <item>
      <title>Store-and-Forward vs. Cut-Through Switching</title>
      <link>https://ciscoskills.net/2011/10/05/store-and-forward-vs.-cut-through-switching/</link>
      <pubDate>Wed, 05 Oct 2011 16:10:00 +0000</pubDate>
      
      <guid>https://ciscoskills.net/2011/10/05/store-and-forward-vs.-cut-through-switching/</guid>
      <description>
        
          &lt;p&gt;&lt;a href=&#34;http://systemstechblog.files.wordpress.com/2011/10/network-cable-color.png&#34;&gt;&lt;img src=&#34;http://systemstechblog.files.wordpress.com/2011/10/network-cable-color.png&#34; alt=&#34;&#34; title=&#34;Network-Cable-Color&#34;&gt;&lt;/a&gt;Switching in the network can happen in two ways, these layer-two devices send frames but they can forward them in different ways. These different modes have positive and negative effects which depend on the type of network environment that runs through them! Store-and-forward is just like the name suggests, the &lt;a href=&#34;http://en.wikipedia.org/wiki/Network_switch&#34; title=&#34;Network switch&#34;&gt;switch&lt;/a&gt; receives a frame on a port and stores the frame in it&#39;s &lt;a href=&#34;http://en.wikipedia.org/wiki/Data_buffer&#34; title=&#34;Data buffer&#34;&gt;memory buffer&lt;/a&gt; until the frame has been completely received. The switch analyzes the frame for information about its destination and uses &lt;a href=&#34;http://en.wikipedia.org/wiki/Cyclic_redundancy_check&#34; title=&#34;Cyclic redundancy check&#34;&gt;CRC&lt;/a&gt; (cyclic redundancy check) a mathematical formula based on the number  of 1 bits in the frame to decide whether the frame has an error. After confirming its integrity the frame is forward out the correct port and toward its destination. If a frame is corrupted the switch discards it and less bandwidth is wasted on the unusable frame. Some other useful information about store and forward switching is it is required for &lt;a href=&#34;http://en.wikipedia.org/wiki/Quality_of_service&#34; title=&#34;Quality of service&#34;&gt;QoS (Quality of  Service)&lt;/a&gt;. Cut-through switching acts on the data as soon as it is received, even if the transmission is not complete! The switch only buffers enough of the frame to read the destination &lt;a href=&#34;http://en.wikipedia.org/wiki/MAC_address&#34; title=&#34;MAC address&#34;&gt;MAC address&lt;/a&gt; so that it can then decide were to  send the frame. This is located in the first 6 &lt;a href=&#34;http://en.wikipedia.org/wiki/Byte&#34; title=&#34;Byte&#34;&gt;bytes&lt;/a&gt; of the frame. The switch looks at the MAC address in its own MAC address table and starts to forward the frame.  The switch does not perform any &lt;a href=&#34;http://en.wikipedia.org/wiki/Error_detection_and_correction&#34; title=&#34;Error detection and correction&#34;&gt;error checking&lt;/a&gt; on the frame because it can start forwarding the frame immediately after the first 6 bytes. Cut-through switching is faster than &lt;a href=&#34;http://en.wikipedia.org/wiki/Store_and_forward&#34; title=&#34;Store and forward&#34;&gt;store-and-forward&lt;/a&gt; but because there is no error checking if there is corrupt frames the switch forwards them into the network using up bandwidth the end device would eventually discard the frame. There is also another type of &lt;a href=&#34;http://en.wikipedia.org/wiki/Cut-through_switching&#34; title=&#34;Cut-through switching&#34;&gt;cut-through switching&lt;/a&gt; which is &lt;a href=&#34;http://en.wikipedia.org/wiki/Fragment_free&#34; title=&#34;Fragment free&#34;&gt;fragment-free&lt;/a&gt; switching.  This is the best of both worlds, it stores the first 64 bytes of the frame Why only 64 bytes? Most problems occur at the first 64 bytes of the frame like collisions. The switch tries to enhance cut-through by using a small error check and then forwards the frame. That&#39;s my post about these methods of switching both are good and bad depending on the network environment. Like always I hope this information is helpful and ff you have an idea of the next topic either ICND1 or ICND2  let me know by posting a comment below. Questions? go ahead and post them!&lt;/p&gt;
&lt;h6 id=&#34;related-articles&#34;&gt;Related articles&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://ciscoskills.net/2011/08/10/the-beginnings-of-layer-two-redundancy/&#34;&gt;The Beginnings of Layer Two Redundancy&lt;/a&gt; (ciscoskills.net)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://ciscoskills.net/2011/09/07/the-middle-of-layer-two-redundancy/&#34;&gt;The Middle of Layer Two Redundancy&lt;/a&gt; (ciscoskills.net)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://mungauwamaseghe.wordpress.com/2011/09/07/journey-to-ccie-lab-exam-part-22-stp-bridge-election/&#34;&gt;Journey to CCIE LAB EXAM - Part 22 - STP Bridge Election&lt;/a&gt; (mungauwamaseghe.wordpress.com)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blogs.cisco.com/datacenter/digging-deeper-into-vxlan/&#34;&gt;Digging Deeper into VXLAN, Part 1&lt;/a&gt; (blogs.cisco.com)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://wiki.answers.com/Q/What_is_fragment-free_switching&#34;&gt;What is fragment-free switching&lt;/a&gt; (wiki.answers.com)&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;comments&#34;&gt;Comments:&lt;/h3&gt;
&lt;h4 id=&#34;heading&#34;&gt;&lt;/h4&gt;
&lt;p&gt;&lt;a href=&#34;%22enod2008@gmail.com%22&#34;&gt;KevinOelen&lt;/a&gt; - &lt;time datetime=&#34;2011-10-05 20:56:53&#34;&gt;Oct 3, 2011&lt;/time&gt;&lt;/p&gt;
&lt;p&gt;Ahhh now I understand difference between them. Thank you!, keep posting bro! I&#39;m you new reader ;-)&lt;/p&gt;
&lt;hr /&gt;
#### 
[eda wanjiru]( &#34;edawanjiru1@gmail.com&#34;) - &lt;time datetime=&#34;2012-03-27 03:26:33&#34;&gt;Mar 2, 2012&lt;/time&gt;
&lt;p&gt;It&#39;s clear and concise,i like it.&lt;/p&gt;
&lt;hr /&gt;
#### 
[Ryan](http://systemstechblog.wordpress.com &#34;lewiryan@isu.edu&#34;) - &lt;time datetime=&#34;2012-03-28 18:58:11&#34;&gt;Mar 3, 2012&lt;/time&gt;
&lt;p&gt;Thanks, :)&lt;/p&gt;
&lt;hr /&gt;
#### 
[Ryan](http://systemstechblog.wordpress.com &#34;lewiryan@isu.edu&#34;) - &lt;time datetime=&#34;2011-10-08 12:21:37&#34;&gt;Oct 6, 2011&lt;/time&gt;
&lt;p&gt;Glad it helped :)&lt;/p&gt;
&lt;hr /&gt;

        
      </description>
    </item>
    
    <item>
      <title>The Middle of Layer Two Redundancy</title>
      <link>https://ciscoskills.net/2011/09/07/the-middle-of-layer-two-redundancy/</link>
      <pubDate>Wed, 07 Sep 2011 18:00:51 +0000</pubDate>
      
      <guid>https://ciscoskills.net/2011/09/07/the-middle-of-layer-two-redundancy/</guid>
      <description>
        
          &lt;p&gt;In the month of August I talked about the &amp;quot;beginnings&amp;quot; of layer two &lt;a href=&#34;http://en.wikipedia.org/wiki/Redundancy_%28engineering%29&#34; title=&#34;Redundancy (engineering)&#34;&gt;redundancy&lt;/a&gt; mainly looking at the basic foundations and fundamentals of having layer two redundancy. Let&#39;s continue are discussion about redundancy in the layer two environment. To review what STP does (&lt;a href=&#34;http://en.wikipedia.org/wiki/Spanning_Tree_Protocol&#34; title=&#34;Spanning Tree Protocol&#34;&gt;Spanning Tree Protocol&lt;/a&gt;) it works at layer two of the &lt;a href=&#34;http://en.wikipedia.org/wiki/OSI_model&#34; title=&#34;OSI model&#34;&gt;OSI model&lt;/a&gt;. If more than one path is available in the &lt;a href=&#34;http://en.wikipedia.org/wiki/Network_Layer&#34; title=&#34;Network Layer&#34;&gt;network&lt;/a&gt; the STP algorithm basically shutdowns the redundant links until the active link is unavailable (shutdown, disabled, etc.) So although there are multiple links connected physically to offer redundancy, logically the switches in the network only see one path that &lt;a href=&#34;http://en.wikipedia.org/wiki/Ethernet_frame&#34; title=&#34;Ethernet frame&#34;&gt;Ethernet frame&lt;/a&gt; can travel. Remember without STP networks would be on the fritz when we introduce redundancy in the environment. STP or &lt;a href=&#34;http://en.wikipedia.org/wiki/IEEE_802.1D&#34; title=&#34;IEEE 802.1D&#34;&gt;IEEE 802.1D&lt;/a&gt; is an open standard so it is not just on Cisco equipment but others as well which helps in a multivendor situation. So how does looping occur without the use STP? Looking at the picture below we can see the broadcasts frames are flooding the network which is by design but the thing that changes is these broadcasts will continue to flood the network because there is on &lt;a href=&#34;http://en.wikipedia.org/wiki/Time_to_live&#34; title=&#34;Time to live&#34;&gt;TTL&lt;/a&gt; (Time-To-Live) on the &lt;a href=&#34;http://en.wikipedia.org/wiki/Data_Link_Layer&#34; title=&#34;Data Link Layer&#34;&gt;data link layer&lt;/a&gt; of the OSI model. As more packets are passed and created the network will become slower and slower and eventually devices on the network will become unavailable this called a &lt;a href=&#34;http://en.wikipedia.org/wiki/Broadcast_radiation&#34; title=&#34;Broadcast radiation&#34;&gt;broadcast storm&lt;/a&gt;. [caption id=&amp;quot;attachment_1534&amp;quot; align=&amp;quot;aligncenter&amp;quot; width=&amp;quot;584&amp;quot; caption=&amp;quot;STP Loop Example (Broadcast Storm)&amp;quot;]&lt;a href=&#34;http://systemstechblog.files.wordpress.com/2011/08/stpfl.png&#34;&gt;&lt;img src=&#34;http://systemstechblog.files.wordpress.com/2011/08/stpfl.png&#34; alt=&#34;An example of an STP loop&#34; title=&#34;STP Loop&#34;&gt;&lt;/a&gt;[/caption] There are also more problems when not using STP besides broadcast storms like the &lt;a href=&#34;http://en.wikipedia.org/wiki/MAC_address&#34; title=&#34;MAC address&#34;&gt;MAC address&lt;/a&gt; table becoming unstable in each switch. This causes the MAC table to be unreliable because of the looping frames in the network. These frames are usually sent to the wrong locations in the network. Multiple frames can also be a problem because of looping frames multiple frames appear on the network and if they are delivered to the intended host it can confuse the host and more likly drop the frames. So looking at the same picture but with STP enabled we can see that broadcast frame will travel the network without looping. On S1 one of the ports is in a blocking state and blocks all traffic coming into that port and traffic coming out of that port. [caption id=&amp;quot;attachment_1539&amp;quot; align=&amp;quot;aligncenter&amp;quot; width=&amp;quot;584&amp;quot; caption=&amp;quot;STP Enabled&amp;quot;]&lt;a href=&#34;http://ciscoskills.net/2011/09/07/the-middle-of-layer-two-redundancy/stp-enable/&#34;&gt;&lt;img src=&#34;http://systemstechblog.files.wordpress.com/2011/08/stp-enable.png&#34; alt=&#34;STP Enabled&#34; title=&#34;STP Enable&#34;&gt;&lt;/a&gt;[/caption] The magic about STP is when the link between S2 and S3 becomes disconnected it will bring the link between S2 and S1 online and continue to send packets! When the link becomes available again it switch back to blocking on S1. So let&#39;s stop there for now and check back next week to see the last chapter of STP, how does it calculate which switch goes to blocking? What other advantages does STP offer? That&#39;s all next week, I hope this information is helpful and if you have an idea of the next topic that deals with either ICND1 or ICND2 let me hear it!&lt;/p&gt;
&lt;h6 id=&#34;related-articles&#34;&gt;Related articles&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://ciscoskills.net/2011/08/10/the-beginnings-of-layer-two-redundancy/&#34;&gt;The Beginnings of Layer Two Redundancy&lt;/a&gt; (ciscoskills.net)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://go.theregister.com/feed/www.theregister.co.uk/2011/08/03/network_resiliency/&#34;&gt;Belt and braces stop the network falling down&lt;/a&gt; (go.theregister.com)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.avaya.com/blogs/archives/2011/08/resiliency-and-redundancy---not-the-same.html&#34;&gt;Resiliency and Redundancy - NOT the same&lt;/a&gt; (avaya.com)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://techbookshelf.com/2011/08/31/cisco-nexus-vpc-configuration-and-spanning-tree-elimination/&#34;&gt;Cisco Nexus vPC Configuration and Spanning-Tree Elimination&lt;/a&gt; (techbookshelf.com)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://ciscoskills.net/2011/07/06/cisco-discovery-protocol/&#34;&gt;Cisco Discovery Protocol&lt;/a&gt; (ciscoskills.net)&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;comments&#34;&gt;Comments:&lt;/h3&gt;
&lt;h4 id=&#34;heading&#34;&gt;&lt;/h4&gt;
&lt;p&gt;&lt;a href=&#34;http://systemstechblog.wordpress.com&#34; title=&#34;lewiryan@isu.edu&#34;&gt;Ryan&lt;/a&gt; - &lt;time datetime=&#34;2011-09-07 18:51:46&#34;&gt;Sep 3, 2011&lt;/time&gt;&lt;/p&gt;
&lt;p&gt;Steve do you have any questions? Ryan&lt;/p&gt;
&lt;hr /&gt;
#### 
[Steve]( &#34;svu@uppertraining.com&#34;) - &lt;time datetime=&#34;2011-09-07 12:27:32&#34;&gt;Sep 3, 2011&lt;/time&gt;
&lt;p&gt;Awesome Site. Ryan can you please contact me.&lt;/p&gt;
&lt;hr /&gt;
#### 
[Welcome CCT (Cisco Certified Technician Certification) | Cisco Skills](http://ciscoskills.net/2011/09/21/welcome-cct-cisco-certified-technician/ &#34;&#34;) - &lt;time datetime=&#34;2011-09-21 20:44:38&#34;&gt;Sep 3, 2011&lt;/time&gt;
&lt;p&gt;[...] The Middle of Layer Two Redundancy (ciscoskills.net) [...]&lt;/p&gt;
&lt;hr /&gt;
#### 
[The “Ending” of Layer Two Redundancy | Cisco Skills](http://ciscoskills.net/2011/09/14/the-%e2%80%9cending%e2%80%9d-of-layer-two-redundancy/ &#34;&#34;) - &lt;time datetime=&#34;2011-09-14 11:17:26&#34;&gt;Sep 3, 2011&lt;/time&gt;
&lt;p&gt;[...] Post navigation ← Previous [...]&lt;/p&gt;
&lt;hr /&gt;
#### 
[Store-and-Forward vs. Cut-Through Switching | Cisco Skills](http://ciscoskills.net/2011/10/05/store-and-forward-vs-cut-through-switching/ &#34;&#34;) - &lt;time datetime=&#34;2011-10-05 10:16:16&#34;&gt;Oct 3, 2011&lt;/time&gt;
&lt;p&gt;[...] The Middle of Layer Two Redundancy (ciscoskills.net) [...]&lt;/p&gt;
&lt;hr /&gt;

        
      </description>
    </item>
    
    <item>
      <title>The Beginnings of Layer Two Redundancy</title>
      <link>https://ciscoskills.net/2011/08/10/the-beginnings-of-layer-two-redundancy/</link>
      <pubDate>Wed, 10 Aug 2011 17:00:58 +0000</pubDate>
      
      <guid>https://ciscoskills.net/2011/08/10/the-beginnings-of-layer-two-redundancy/</guid>
      <description>
        
          &lt;p&gt;&lt;a href=&#34;http://systemstechblog.files.wordpress.com/2011/08/network-diagram.png&#34;&gt;&lt;img src=&#34;http://systemstechblog.files.wordpress.com/2011/08/network-diagram.png&#34; alt=&#34;&#34; title=&#34;network-diagram&#34;&gt;&lt;/a&gt;In a perfect world we would never need redundancy on a &lt;a href=&#34;http://en.wikipedia.org/wiki/Network_Layer&#34; title=&#34;Network Layer&#34;&gt;network&lt;/a&gt; infrastructure, but as you know as well as I know we don&#39;t live in a perfect world. Hardware will eventually fail, bottlenecks will appear, and the speed of our network will become slower when we max the bandwidth on links. So having redundancy in routers, connections, and having a hierarchy network is one of best choices to make when improving the efficiently of the network. But in the &lt;a href=&#34;http://en.wikipedia.org/wiki/OSI_model&#34; title=&#34;OSI model&#34;&gt;OSI model&lt;/a&gt; there is one layer that can&#39;t have redundancy at least logically and that is &lt;a href=&#34;http://en.wikipedia.org/wiki/Abstraction_layer&#34; title=&#34;Abstraction layer&#34;&gt;Layer&lt;/a&gt; two of the OSI model. If you follow this blog way back when I talked about the OSI model, layer two belongs to the switches and by design the ethernet frame does not support a TTL (&lt;a href=&#34;http://en.wikipedia.org/wiki/Time_to_live&#34; title=&#34;Time to live&#34;&gt;Time-To-Live&lt;/a&gt;) like the &lt;a href=&#34;http://en.wikipedia.org/wiki/Internet_Protocol&#34; title=&#34;Internet Protocol&#34;&gt;IP packet&lt;/a&gt;. So bring forth STP, the &lt;a href=&#34;http://en.wikipedia.org/wiki/Spanning_Tree_Protocol&#34; title=&#34;Spanning Tree Protocol&#34;&gt;Spanning Tree Protocol&lt;/a&gt; which works at layer two of the OSI model. If more than one path is available in the network the STP algorithm basically shutdowns the redundant links until active link is unavailable (shutdown, disabled, etc.) So although there are multiple links connected physically to offer redundancy, logically the switches in the network only see one path that ethernet frame can travel. &lt;strong&gt;Your Thought:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Wait...I have plugged into multiple Cisco switches before to create a redundant path and I did not notice anything wrong?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;That&#39;s because by default STP is enabled, to the average person they can plug away and create redundant paths with switches and cause no harm to the network. But if STP has been disabled on those switches or switches that don&#39;t support STP (dumb switches), a Layer 2 loop can occur. A Layer 2 loop is a nightmare if this happens in a production network and can happen in seconds. Loops result in high &lt;a href=&#34;http://en.wikipedia.org/wiki/Central_processing_unit&#34; title=&#34;Central processing unit&#34;&gt;CPU&lt;/a&gt; load on all switches caught in the loop. Because the same frames are constantly being forwarded back and forth between all switches in the loop, the CPU of the switch ends up having to process a lot of data. This slows down performance on the switch when legitimate traffic arrives.  A host caught in a network loop is not accessible to other hosts on the network. Because the &lt;a href=&#34;http://en.wikipedia.org/wiki/MAC_address&#34; title=&#34;MAC address&#34;&gt;MAC address&lt;/a&gt; table is constantly changing with the updates from the broadcast frames, the switch does not know which port to send the unicast frames out to reach the destination. The unicast frames end up looping around the network as well. As more and more frames end up looping on the network, a &lt;a href=&#34;http://en.wikipedia.org/wiki/Broadcast_radiation&#34; title=&#34;Broadcast radiation&#34;&gt;broadcast storm&lt;/a&gt; occurs. What makes this even more fun is if you try connecting to the switches to solve this problem, good luck :). Most of the time you have to physically turn off the switches to kill the broadcast storm and if it happened once expect it to happen again. To make things worse if any end-devices are connected to the switch ports that are experiencing a broadcast storm they too have a hard time keeping up with the mountain of broadcast frames being sent and sometimes malfunction. Usually you would have to disconnect the switch from the redundant links and apply STP to it and then re-connect the redundant links in order for your network to be broadcast storm free. Although I&#39;m just getting started I think by just introducing this topic will help you better understand it later, I will get into more of this STP magic and how this really helps us design a hierarchy network. Like always I hope this information was informative and if you can&#39;t wait a simple search about STP will help. You can also go right to the source for more STP information at &lt;a href=&#34;http://en.wikipedia.org/wiki/Cisco_Systems&#34; title=&#34;Cisco Systems&#34;&gt;Cisco&#39;s&lt;/a&gt; Support and Documentation. Have an idea of the next topic either ICND1 or ICND2 let me know about it.&lt;/p&gt;
&lt;h6 id=&#34;related-articles&#34;&gt;Related articles&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://ciscoskills.net/2011/07/06/cisco-discovery-protocol/&#34;&gt;Cisco Discovery Protocol&lt;/a&gt; (ciscoskills.net)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blogs.cisco.com/smallbusiness/get-data-to-its-destination-faster/&#34;&gt;Get Data to Its Destination Faster&lt;/a&gt; (blogs.cisco.com)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://ciscoskills.net/2011/01/17/the-osi-layer/&#34; title=&#34;The OSI Layer&#34;&gt;The OSI Layer&lt;/a&gt;  (ciscoskills.net)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://go.theregister.com/feed/www.theregister.co.uk/2011/06/16/network_tuning/&#34;&gt;When tuning the server, don&#39;t forget the network&lt;/a&gt; (go.theregister.com)&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;comments&#34;&gt;Comments:&lt;/h3&gt;
&lt;h4 id=&#34;heading&#34;&gt;&lt;/h4&gt;
&lt;p&gt;&lt;a href=&#34;http://ciscoskills.net/2011/09/07/the-middle-of-layer-two-redundancy/&#34; title=&#34;&#34;&gt;The Middle of Layer Two Redundancy | Cisco Skills&lt;/a&gt; - &lt;time datetime=&#34;2011-09-07 12:08:56&#34;&gt;Sep 3, 2011&lt;/time&gt;&lt;/p&gt;
&lt;p&gt;[...] The Beginnings of Layer Two Redundancy (ciscoskills.net) [...]&lt;/p&gt;
&lt;hr /&gt;

        
      </description>
    </item>
    
  </channel>
</rss>
