<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Automation on Cisco Skills</title>
    <link>https://ciscoskills.net/tags/automation/</link>
    <description>Recent content in Automation on Cisco Skills</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 13 Nov 2018 15:55:19 +0000</lastBuildDate><atom:link href="https://ciscoskills.net/tags/automation/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Automation Dance</title>
      <link>https://ciscoskills.net/2018/11/automation-dance/</link>
      <pubDate>Tue, 13 Nov 2018 15:55:19 +0000</pubDate>
      
      <guid>https://ciscoskills.net/2018/11/automation-dance/</guid>
      <description>
        
          &lt;p&gt;I keep doing the automation dance, (yeah...that&#39;s me) there are a lot of different tooling products out there. I have been trying to understand a use case around using it with network automation. Recently I have been dancing around with Ansible. My personal belief is that using any type of these tools would be helpful but it can be a steep learning curve if you really don&#39;t have any programming knowledge. This is not something that is relatively easy to use or understand, don&#39;t expect to have a working network automated tool in production on day one. I think this is great for learning, and using this in a network sandbox. If you don&#39;t have programming mindset it might make your job harder on day one before it gets easier, but just like learning to dance you have to learn the steps, the moves, and maintain the rhythm. So with that let&#39;s at least figure out the starting points, and begin learning the steps of the automation dance. ;)&lt;/p&gt;
&lt;h3 id=&#34;diy-tooling&#34;&gt;DIY Tooling?&lt;/h3&gt;
&lt;p&gt;All of these automated frameworks are tools, Ansible, Puppet, Chef, Saltstack, etc. These are all tools that can be used to automate your device to do whatever you&#39;re trying to accomplish without manual configuration, &lt;strong&gt;that&#39;s the goal.&lt;/strong&gt; All of these tools are &amp;quot;freemium&amp;quot;, they are available on Github and you can use them however you want, The catch with all of these tools is they are a framework, if you want something fancy integration or some web interface, and have additional smarts with the product, then you&#39;re going to pay for it or you could build it yourself and stick to the man. Just need to increase payroll and hire developers, which just takes your goal of automating your network infrastructure to maybe day 365? Remember you still have to maintain it, patch it, upgrade it. (Does it still work after all of that?) You&#39;re not in the business of developing a platform that makes these tools easier to work with, that&#39;s the reason they all have paid options.&lt;/p&gt;
&lt;h3 id=&#34;but&#34;&gt;But...&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;quot;I&#39;m just going to use the CLI of one of those tools and develop my own playbooks, cookbooks, manifests, salt states, and make it work!&amp;quot;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I would say most people exploring automation go this route, and it&#39;s not a bad starting point when looking at all of these tools they all have these common themes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Deprecated feature that was referenced on the internet somewhere long ago and it worked at that time, but now the tool does this instead of that.&lt;/li&gt;
&lt;li&gt;Documentation is lacking and it becomes difficult to find what you are looking for, like config examples, error messages, and overall architecture of the tool, how does it work?, best practices?, etc.&lt;/li&gt;
&lt;li&gt;Tools are used incorrectly when referencing what other people posted online. An example is like seeing playbooks, cookbooks, manifests, or salt states have plain/hashed passwords in them! Some tools (Ansible) offer a vault for passwords but people don&#39;t use them or know about them!&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These aren&#39;t showstoppers but keep these in mind when starting out. All of these tools come with a foundation that doesn&#39;t change so learn from that and then begin to branch out, and it might help to buy a book if you are committed.&lt;/p&gt;
&lt;h3 id=&#34;call-it-quits&#34;&gt;Call it quits?&lt;/h3&gt;
&lt;p&gt;I wouldn&#39;t, this is where you need to stop and think, before even exploring these tools and ask yourself what would automation (tool) help at XYZ? If you are not thinking about automation you should start! Crawl, walk, run when exploring automation It&#39;s important to learn first, sandbox next and develop continuelsy. I saw this post on Reddit last weekÂ  (&lt;a href=&#34;https://www.reddit.com/r/networking/comments/9uzlpz/for_those_who_if_they_keep_hearing_devops_python/&#34;&gt;For those who if they keep hearing &amp;quot;DevOps&amp;quot;, &amp;quot;Python &amp;quot;, &amp;quot;Automation&amp;quot; are gonna kill somebody... read on&lt;/a&gt;) and totally agree, I don&#39;t think we are expecting someone with superhero skills that can whip up automation and have us say.. &amp;quot;Alexa..fix the network&amp;quot; but I do think we need to shift focus on it by thinking about it, learning about it, and then using it. ;)&lt;/p&gt;

        
      </description>
    </item>
    
  </channel>
</rss>
