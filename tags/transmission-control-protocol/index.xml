<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Transmission Control Protocol on Cisco Skills</title>
    <link>http://archive.ciscoskills.net.s3-website-us-west-2.amazonaws.com/tags/transmission-control-protocol/</link>
    <description>Recent content in Transmission Control Protocol on Cisco Skills</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Mon, 28 Mar 2011 16:15:29 +0000</lastBuildDate><atom:link href="http://archive.ciscoskills.net.s3-website-us-west-2.amazonaws.com/tags/transmission-control-protocol/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Understanding UDP</title>
      <link>http://archive.ciscoskills.net.s3-website-us-west-2.amazonaws.com/2011/03/understanding-udp/</link>
      <pubDate>Mon, 28 Mar 2011 16:15:29 +0000</pubDate>
      
      <guid>http://archive.ciscoskills.net.s3-website-us-west-2.amazonaws.com/2011/03/understanding-udp/</guid>
      <description>
        
          &lt;p&gt;Forever ago I talked about TCP (&lt;a href=&#34;http://ciscoskills.net/2011/02/25/understanding-tcp/&#34; title=&#34;Understanding TCP&#34;&gt;Understanding TCP&lt;/a&gt;) and I said that in that post that UDP would be another day, well this is the day where we get to understand UDP, which stands for &lt;a href=&#34;http://en.wikipedia.org/wiki/User_Datagram_Protocol&#34; title=&#34;User Datagram Protocol&#34;&gt;User Datagram Protocol&lt;/a&gt;. UDP is the total opposite of the TCP communication. UDP in short sends information or data without notifying the receiver that its sending data. UDP is considered a &lt;a href=&#34;http://en.wikipedia.org/wiki/Connectionless_protocol&#34; title=&#34;Connectionless protocol&#34;&gt;connectionless protocol&lt;/a&gt;, and does not guarantee the reliability or order the packets like TCP does. Therefor packets may be dropped and are never recovered.&lt;a href=&#34;http://ciscoskills.net/2011/03/28/understanding-udp/udp-communication/&#34;&gt;&lt;img src=&#34;http://systemstechblog.files.wordpress.com/2011/03/udp-communication.png?w=300&#34; alt=&#34;The UDP Communication Progress&#34; title=&#34;UDP Communication&#34;&gt;&lt;/a&gt; Although this may sound like a bad thing, it depends on your network application. Some common network applications that use UDP include: the Domain Name System (&lt;a href=&#34;http://en.wikipedia.org/wiki/Domain_Name_System&#34; title=&#34;Domain Name System&#34;&gt;DNS&lt;/a&gt;), streaming media applications such as &lt;a href=&#34;http://en.wikipedia.org/wiki/IPTV&#34; title=&#34;IPTV&#34;&gt;IPTV&lt;/a&gt;, &lt;a href=&#34;http://en.wikipedia.org/wiki/Voice_over_IP&#34; title=&#34;Voice over IP&#34;&gt;Voice over IP (VoIP)&lt;/a&gt;, &lt;a href=&#34;http://en.wikipedia.org/wiki/Trivial_File_Transfer_Protocol&#34; title=&#34;Trivial File Transfer Protocol&#34;&gt;Trivial File Transfer Protocol&lt;/a&gt; (TFTP) and online games. Looking at the UDP header there is a lot less overhead when compared to TCP, this makes UDP faster for routers to route the information with less overhead on processing power. &lt;a href=&#34;http://ciscoskills.net/2011/03/28/understanding-udp/udp-header/&#34;&gt;&lt;img src=&#34;http://systemstechblog.files.wordpress.com/2011/03/udp-header.png?w=300&#34; alt=&#34;The UDP Header Field&#34; title=&#34;UDP Header&#34;&gt;&lt;/a&gt; Time-sensitive applications often use UDP because if dropped packets means less delayed information then UDP it is. In connectionless protocols there is no effort made to set up a connection like TCP, UDP just sends the information in one direction from the source address to the destination address and hopes it arrives in complete package but if not, the protocol does not care. So to review:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;UDP is Unreliable - When a message is sent, it cannot or will not know if it will reach its destination; it could get lost along the way. There is no concept of acknowledgment, re-transmission and or timeout like the &lt;a href=&#34;http://en.wikipedia.org/wiki/Transmission_Control_Protocol&#34; title=&#34;Transmission Control Protocol&#34;&gt;TCP protocol&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;UDP is not ordered - If two messages are sent to the same destination, the order in which they arrive cannot be predicted.&lt;/li&gt;
&lt;li&gt;UDP is lightweight - There is no ordering of messages, any tracking connections, etc. It is a small transport layer designed on top of &lt;a href=&#34;http://en.wikipedia.org/wiki/Internet_Protocol&#34; title=&#34;Internet Protocol&#34;&gt;IP&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Inside UDP &lt;a href=&#34;http://en.wikipedia.org/wiki/Datagram&#34; title=&#34;Datagram&#34;&gt;Datagrams&lt;/a&gt; - &lt;a href=&#34;http://en.wikipedia.org/wiki/Packet_%28information_technology%29&#34; title=&#34;Packet (information technology)&#34;&gt;Packets&lt;/a&gt; that are sent individually and are guaranteed to be whole if they arrive. Packets have definite bounds and do not split or merge into data streams. (Meaning that UDP packets are not coherent)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;That&#39;s UDP is in a summary format, I hope this information is useful and like always look at other sources like Cisco.com or do a simple web search. Comments are encourage, so let me know how I&#39;m  doing if you have a topic that is related to the ICND1 or ICND2 let me know about.&lt;/p&gt;

        
      </description>
    </item>
    
    <item>
      <title>Common Network Attacks</title>
      <link>http://archive.ciscoskills.net.s3-website-us-west-2.amazonaws.com/2011/03/common-network-attacks/</link>
      <pubDate>Thu, 17 Mar 2011 16:30:41 +0000</pubDate>
      
      <guid>http://archive.ciscoskills.net.s3-website-us-west-2.amazonaws.com/2011/03/common-network-attacks/</guid>
      <description>
        
          &lt;p&gt;Network attacks have always been around but they are getting more advanced every day. These attacks are also easy to set up and use. In the past these types of attacks would have to be pulled off by someone who really knew about computers and to know what they are doing. That&#39;s a true hacker, now there are programs that do the same damage and sometimes more with a couple clicks of a mouse, so now anybody can bring down a network. The only thing that changes is the motivation of the person. Some People that run scripts or programs don&#39;t always know what the program does, so they click on some buttons and the program does its thing, if it fails sometimes the person stops there and gives up. But there are people who want to do some real damage to a company these people usually have organizations like the Anonymous group. So what are some of the common attacks people or organizations do? Well in a company the &lt;a href=&#34;http://en.wikipedia.org/wiki/Network_administrator&#34; title=&#34;Network administrator&#34;&gt;network administrators&lt;/a&gt; might focus on the outside of the network, but have their inside network unsecure or extremely weak. So if somebody on the inside was able to execute and attack it could have a huge effect on the network. So attacks that could occur:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Reconnaissance Attacks: Gather information about the network, this could be anything from ping sweeps, to port scanners, &lt;a href=&#34;http://en.wikipedia.org/wiki/Internet_Protocol&#34; title=&#34;Internet Protocol&#34;&gt;IP&lt;/a&gt; scanners, etc. The goal of this type of attack to gather information on the network and exploit its weak areas.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Access Attacks: Try to steal or attempt to steal data. Financial information, &lt;a href=&#34;http://en.wikipedia.org/wiki/Classified_information&#34; title=&#34;Classified information&#34;&gt;classified information&lt;/a&gt;, critical information and even international espionage.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Denial of service (DoS) attacks. Which has three types of DoS types&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Destroyers: which harm computers, by erasing data and software&lt;/li&gt;
&lt;li&gt;Crashers: cause harm by causing computers to fail or causing the machine to be unable to commutate with the network or connect to the network.&lt;/li&gt;
&lt;li&gt;Flooders: Flood the network with packets to make the network unusable and preventing any useful communication making the service appear unavailable.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Computer viruses are one of the many tools that could be used to carry out these types of attacks. Along with access to unsecured wireless networks. This makes the network weak if the computer or host is able to access ever device on that network. Infected laptops if the user brings the computer home from the office, that computer could get infected and exposing classified information and even have the potential to infect other computers. Employees could with or without knowing that what they download or save on USBs could cause harm to the company. A good security policy is recommended along with some helpful network access tools and components. These security tools can always stop attacks but they can slow somebody down and maybe be alerted to higher authority. Viruses are a common thing to get on a computer that is not protected with antivirus software or that virus could be a &lt;a href=&#34;http://en.wikipedia.org/wiki/Zero-day_attack&#34; title=&#34;Zero-day attack&#34;&gt;zero-day attack&lt;/a&gt; so the software does not have the virus in its signature database. But there are more than just viruses out there like:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Scanners: Are a tool that sends connection requests to a different &lt;a href=&#34;http://en.wikipedia.org/wiki/Transmission_Control_Protocol&#34; title=&#34;Transmission Control Protocol&#34;&gt;TCP&lt;/a&gt; or &lt;a href=&#34;http://en.wikipedia.org/wiki/User_Datagram_Protocol&#34; title=&#34;User Datagram Protocol&#34;&gt;UDP port&lt;/a&gt;, different applications. This attempt tries to discover which hosts or computers have IP services and possibly the operating system.&lt;/li&gt;
&lt;li&gt;Spyware: A virus that looks for private or &lt;a href=&#34;http://en.wikipedia.org/wiki/Information_sensitivity&#34; title=&#34;Information sensitivity&#34;&gt;sensitive information&lt;/a&gt;, like tracking websites the user visits. What the user does with the computer, and passing that information back to the attacker.&lt;/li&gt;
&lt;li&gt;Worm: A self-propagating program that can quickly spread and copy itself around the network or even the internet. This type of program also can do &lt;a href=&#34;http://en.wikipedia.org/wiki/Denial-of-service_attack&#34; title=&#34;Denial-of-service attack&#34;&gt;DoS attacks&lt;/a&gt; on servers and computers.&lt;/li&gt;
&lt;li&gt;Keystroke Loggers: A virus that logs all keystrokes, capturing your username and passwords to secure sites. Giving the attacker access to your personal information.&lt;/li&gt;
&lt;li&gt;Phishing: The attacker sets up a fake website that looks exactly like a legitimate website often from banks and or credit card companies. Sometimes the user will get an e-mail and a link to the website, the user clicks on the link and is directed to the fake website. The user then puts in login information or personal information. Giving the attack access to the user&#39;s bank or personal information&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Although this is brief it gives you an overview of the different types of security attacks network and host based. This can go into a lot more information and if you want to find more information about an attack and the ways to stop or slow down the attack a simple web search will be able to point you in the right direction. If you have any questions or comments feel to comment below.&lt;/p&gt;

        
      </description>
    </item>
    
    <item>
      <title>Understanding TCP</title>
      <link>http://archive.ciscoskills.net.s3-website-us-west-2.amazonaws.com/2011/02/understanding-tcp/</link>
      <pubDate>Fri, 25 Feb 2011 18:10:59 +0000</pubDate>
      
      <guid>http://archive.ciscoskills.net.s3-website-us-west-2.amazonaws.com/2011/02/understanding-tcp/</guid>
      <description>
        
          &lt;h2 id=&#34;this-tutorial-is-going-to-betalking-about-the-tcp-protocolhttpenwikipediaorgwikitransmission_control_protocol-transmission-control-protocol-every-time-you-connect-to-a-website-you-are-using-the-http-protocolhttpenwikipediaorgwikihypertext_transfer_protocol-hypertext-transfer-protocol-but-below-that-you-are-also-using-a-tcp-protocol-the-nature-of-tcp-is-to-provideerror-recovery-there-are-other-services-or-applications-that-use-tcp-http-however-is-a-common-protocol-that-is-used-in-online-applications-remember-tcp-is-not-the-only-protocol-in-the-transport-layerhttpenwikipediaorgwikitransport_layer-transport-layer-of-the-osi-modelhttpenwikipediaorgwikiosi_model-osi-model-there-is-another-called-udphttpenwikipediaorgwikiuser_datagram_protocol-user-datagram-protocol-but-thats-another-day--tcp-stands-for-transmission-control-protocol-what-makes-tcp-shine-is-its-error-recoveryhttpenwikipediaorgwikierror_detection_and_correction-error-detection-and-correction-this-helps-other-protocolshttpenwikipediaorgwikicommunications_protocol-communications-protocolbelow-not-worry-about-if-the-packet-was-droppedbecause-tcp-will-requestthat-packet-again-with-all-of-that-overhead-in-tcp-it-does-require-more-bandwidth-and-processing-compared-to-the-udp-protocol-tcp-has-several-fields-in-the-header-as-pictured-belowthe-tcp-header-fieldhttpsystemstechblogfileswordpresscom201102tcpheaderjpgw300-tcp-headerhttpsystemstechblogwordpresscom20110225understanding-tcptcpheader-like-mentioned-tcp-has-reliability-error-recovery-this-is-madepossible-by-using-sequence-and-acknowledgment-numbers-byteshttpenwikipediaorgwikibyte-byte-in-the-tcp-header-field-take-the-example-below-the-acknowledgment-field-in-the-tcp-header-that-was-sent-by-theweb-browser-was-4000-this-implies-the-next-byteto-bereceived-will-have-a-sequence-number-of-4000tcp-seq-and-ackhttpsystemstechblogfileswordpresscom201102tcp-sqackpngw300-tcp-sqackhttpsystemstechblogwordpresscom20110225understanding-tcptcp-sqack-since-the-sequence-and-acknowledgment-numbers-count-the-number-of-bytes-this-helps-with-error-control-if-a-tcp-segment-was-lost-or-caused-an-error-the-web-browserhttpenwikipediaorgwikiweb_browser-web-browserwould-send-an-acknowledgment-that-the-web-server-that-would-not-be-expecting-and-resend-any-lost-data-an-example-would-be-if-the-web-browser-only-received-2000-bytes-the-client-would-send-an-acknowledgment-of3000-bytes-when-the-web-server-received-that-information-it-knows-that-it-sent-3000-bytes-of-data-and-the-acknowledgment-field-should-be4000-the-web-server-would-resend-the-third-segment-again-and-wait-of-an-acknowledgment-of-4000tcp-drophttpsystemstechblogfileswordpresscom201102tcp-droppngw300-tcp-drophttpsystemstechblogwordpresscom20110225understanding-tcptcp-drop-another-feature-tcp-has-is-calledflow-control-this-uses-the-window-field-which-determines-the-maximumamount-unacknowledged-bytes-at-a-given-time-the-size-starts-out-small-and-if-no-errors-occur-then-the-window-size-increases-the-number-of-unacknowledged-bytes-this-speeds-up-time-needed-to-download-the-information-if-errors-start-to-occur-then-the-windows-size-decreases-keep-in-mind-that-this-field-will-change-often-as-it-will-continue-try-to-raise-the-number-of-unacknowledged-bytestcp-windowhttpsystemstechblogfileswordpresscom201102tcp-windowpngw300-tcp-windowhttpsystemstechblogwordpresscom20110225understanding-tcptcp-window-tcp-is-also-does-a-connectionestablishment-and-termination-this-happens-before-any-data-is-sentis-it-will-also-start-the-sequence-numbers-acknowledgment-numbers-and-agree-on-the-port-numbershttpenwikipediaorgwikiport_number-port-numberto-use-this-three-way-handshake-happens-in-beginning-and-at-the-end-when-the-data-transfer-is-complete-the-flags-it-uses-in-the-tcp-header-are-syn-which-means-synchronize-the-sequence-numbers-ack-which-is-an-acknowledgment-field-and-to-terminate-or-finish-the-connection-it-will-send-a-fin-bit-although-this-a-brief-tutorial-and-how-tcp-works-in-gives-you-an-understanding-of-the-main-components-that-are-involvedin-setting-up-a-tcp-connection-and-finishing-a-connection-like-always-i-encourage-you-if-you-would-like-more-information-a-web-search-will-do-along-with-visiting-ciscocom-i-hope-this-tutorial-was-helpful&#34;&gt;This tutorial is going to be talking about the &lt;a href=&#34;http://en.wikipedia.org/wiki/Transmission_Control_Protocol&#34; title=&#34;Transmission Control Protocol&#34;&gt;TCP protocol&lt;/a&gt;. Every time you connect to a website you are using the &lt;a href=&#34;http://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol&#34; title=&#34;Hypertext Transfer Protocol&#34;&gt;HTTP protocol&lt;/a&gt;, but below that you are also using a TCP protocol. The nature of TCP is to provide error recovery; there are other services or applications that use TCP. HTTP however is a common protocol that is used in online applications.  Remember TCP is not the only protocol in the &lt;a href=&#34;http://en.wikipedia.org/wiki/Transport_Layer&#34; title=&#34;Transport Layer&#34;&gt;transport layer&lt;/a&gt; of the &lt;a href=&#34;http://en.wikipedia.org/wiki/OSI_model&#34; title=&#34;OSI model&#34;&gt;OSI model&lt;/a&gt;, there is another called &lt;a href=&#34;http://en.wikipedia.org/wiki/User_Datagram_Protocol&#34; title=&#34;User Datagram Protocol&#34;&gt;UDP&lt;/a&gt; but that&#39;s another day. :) TCP stands for (Transmission Control Protocol) what makes TCP shine is its &lt;a href=&#34;http://en.wikipedia.org/wiki/Error_detection_and_correction&#34; title=&#34;Error detection and correction&#34;&gt;error recovery&lt;/a&gt;, this helps other &lt;a href=&#34;http://en.wikipedia.org/wiki/Communications_protocol&#34; title=&#34;Communications protocol&#34;&gt;protocols&lt;/a&gt; below not worry about if the packet was dropped because TCP will request that packet again. With all of that overhead in TCP it does require more bandwidth, and processing compared to the UDP protocol. TCP has several fields in the header as pictured below.  &lt;a href=&#34;http://systemstechblog.wordpress.com/2011/02/25/understanding-tcp/tcpheader/&#34;&gt;&lt;img src=&#34;http://systemstechblog.files.wordpress.com/2011/02/tcpheader.jpg?w=300&#34; alt=&#34;The TCP Header Field&#34; title=&#34;tcp-header&#34;&gt;&lt;/a&gt; Like mentioned TCP has reliability (error recovery) this is made possible by using sequence and acknowledgment numbers (&lt;a href=&#34;http://en.wikipedia.org/wiki/Byte&#34; title=&#34;Byte&#34;&gt;bytes&lt;/a&gt;) in the TCP header field. Take the example below the acknowledgment field in the TCP header that was sent by the web browser was 4000, this implies the next byte to be received will have a sequence number of 4000.  &lt;a href=&#34;http://systemstechblog.wordpress.com/2011/02/25/understanding-tcp/tcp-sqack/&#34;&gt;&lt;img src=&#34;http://systemstechblog.files.wordpress.com/2011/02/tcp-sqack.png?w=300&#34; alt=&#34;TCP SEQ and ACK&#34; title=&#34;TCP-SQACK&#34;&gt;&lt;/a&gt; Since the sequence and acknowledgment numbers count the number of bytes, this helps with error control if a TCP segment was lost or caused an error the &lt;a href=&#34;http://en.wikipedia.org/wiki/Web_browser&#34; title=&#34;Web browser&#34;&gt;web browser&lt;/a&gt; would send an acknowledgment that the web server that would not be expecting and resend any lost data. An example would be if the web browser only received 2000 bytes, the client would send an acknowledgment of 3000 bytes. When the web server received that information it knows that it sent 3000 bytes of data and the acknowledgment field should be 4000. The web server would resend the third segment again and wait of an acknowledgment of 4000.  &lt;a href=&#34;http://systemstechblog.wordpress.com/2011/02/25/understanding-tcp/tcp-drop/&#34;&gt;&lt;img src=&#34;http://systemstechblog.files.wordpress.com/2011/02/tcp-drop.png?w=300&#34; alt=&#34;TCP Drop&#34; title=&#34;tcp-drop&#34;&gt;&lt;/a&gt; Another feature TCP has is called flow control; this uses the window field which determines the maximum amount unacknowledged bytes at a given time. The size starts out small and if no errors occur then the window size increases the number of unacknowledged bytes. This speeds up time needed to download the information. If errors start to occur then the windows size decreases, keep in mind that this field will change often as it will continue try to raise the number of unacknowledged bytes.  &lt;a href=&#34;http://systemstechblog.wordpress.com/2011/02/25/understanding-tcp/tcp-window/&#34;&gt;&lt;img src=&#34;http://systemstechblog.files.wordpress.com/2011/02/tcp-window.png?w=300&#34; alt=&#34;TCP Window&#34; title=&#34;TCP-Window&#34;&gt;&lt;/a&gt; TCP is also does a connection establishment and termination. This happens before any data is sent is it will also start the sequence numbers, acknowledgment numbers and agree on the &lt;a href=&#34;http://en.wikipedia.org/wiki/Port_number&#34; title=&#34;Port number&#34;&gt;port numbers&lt;/a&gt; to use. This three-way handshake happens in beginning and at the end when the data transfer is complete. The flags it uses in the TCP header are &amp;quot;SYN&amp;quot; which means synchronize the sequence numbers. &amp;quot;ACK&amp;quot; which is an acknowledgment field and to terminate or finish the connection it will send a &amp;quot;FIN&amp;quot; bit. Although this a brief tutorial and how TCP works in gives you an understanding of the main components that are involved in setting up a TCP connection and finishing a connection. Like always I encourage you if you would like more information a web search will do, along with visiting Cisco.com. I hope this tutorial was helpful.&lt;/h2&gt;
&lt;h3 id=&#34;comments&#34;&gt;Comments:&lt;/h3&gt;
&lt;h4 id=&#34;heading&#34;&gt;&lt;/h4&gt;
&lt;p&gt;&lt;a href=&#34;http://ciscoskills.net/2011/03/04/wordpress-com-hit-by-a-dos-attack/&#34; title=&#34;&#34;&gt;WordPress.com Hit by a DoS Attack | Cisco Skills&lt;/a&gt; - &lt;time datetime=&#34;2011-03-04 08:41:33&#34;&gt;Mar 5, 2011&lt;/time&gt;&lt;/p&gt;
&lt;p&gt;[...] out my recent post of Understanding TCP to learn how the TCP protocol works in a simplified form. You can also find more information about [...]&lt;/p&gt;
&lt;hr /&gt;

        
      </description>
    </item>
    
    <item>
      <title>Understanding CBAC</title>
      <link>http://archive.ciscoskills.net.s3-website-us-west-2.amazonaws.com/2011/02/understanding-cbac/</link>
      <pubDate>Tue, 22 Feb 2011 17:00:34 +0000</pubDate>
      
      <guid>http://archive.ciscoskills.net.s3-website-us-west-2.amazonaws.com/2011/02/understanding-cbac/</guid>
      <description>
        
          &lt;p&gt;Although using hardware firewalls are an excellent step forward when securing your network. They can cost money and are not cheap to set up and configure. Using CBAC is built-into the &lt;a href=&#34;http://www.cisco.com/en/US/products/ps6537/products_ios_sub_category_home.html&#34; title=&#34;Cisco IOS&#34;&gt;Cisco IOS&lt;/a&gt; router and helps filter those unwanted protocols that are in your network. When setting up routers as firewalls you have some choices like using CBAC the &amp;quot;Classic&amp;quot; firewall, or zone based policy (ZBF). Today we will talk about CBAC and how to understand the core components of what make &lt;a href=&#34;http://en.wikipedia.org/wiki/Context-based_access_control&#34; title=&#34;Context-based access control&#34;&gt;CBAC&lt;/a&gt; possible. CBAC stands for Content-Base-&lt;a href=&#34;http://en.wikipedia.org/wiki/Access_control&#34; title=&#34;Access control&#34;&gt;Access-Control&lt;/a&gt; and uses &lt;a href=&#34;http://en.wikipedia.org/wiki/Access_control_list&#34; title=&#34;Access control list&#34;&gt;ACLs&lt;/a&gt;. (Access Control Lists) Unlike the established TCP session and reflexive ACLs CBAC has several advantages:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Monitors TCP connections, (&lt;a href=&#34;http://en.wikipedia.org/wiki/Transmission_Control_Protocol&#34; title=&#34;Transmission Control Protocol&#34;&gt;Three-way handshake&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Maintains &lt;a href=&#34;http://en.wikipedia.org/wiki/User_Datagram_Protocol&#34; title=&#34;User Datagram Protocol&#34;&gt;UDP&lt;/a&gt; session information&lt;/li&gt;
&lt;li&gt;Tracks TCP sequence numbers&lt;/li&gt;
&lt;li&gt;Inspects DNS queries and replies&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://en.wikipedia.org/wiki/Inspection&#34; title=&#34;Inspection&#34;&gt;Inspect&lt;/a&gt; common &lt;a href=&#34;http://en.wikipedia.org/wiki/Internet_Control_Message_Protocol&#34; title=&#34;Internet Control Message Protocol&#34;&gt;ICMP&lt;/a&gt; messages types&lt;/li&gt;
&lt;li&gt;Supports applications that rely on multiple connections (FTP)&lt;/li&gt;
&lt;li&gt;Inspects embedded address&lt;/li&gt;
&lt;li&gt;Inspects &lt;a href=&#34;http://en.wikipedia.org/wiki/Application_Layer&#34; title=&#34;Application Layer&#34;&gt;Application Layer&lt;/a&gt; information&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ACLs only look at the network layer and sometimes the transport layer. CBAC is application aware, meaning CBAC is a stateful firewall which keeps track of the state of network connections such as TCP streams, and UDP communication travelling across it. The firewall is programmed to distinguish legitimate packets for different types of connections. Only packets matching a known connection state will be allowed by the firewall; others will be rejected. Because CBAC only matches packets (TCP, UDP and other protocols) it was specified to look at, it will then depend on the ACL if that packet is allowed access or denied. CBAC creates openings in ACLs at the interfaces that inspect the traffic by adding a temporary ACL entry for a specific session. The openings are created when the internal network starts a session with the outside network that would normally be denied. The traffic is only allowed back through the firewall if it is part of the same session and has the correct properties that CBAC is looking for. For example let&#39;s say a user starts an &lt;a href=&#34;http://en.wikipedia.org/wiki/Session_management&#34; title=&#34;Session management&#34;&gt;http session&lt;/a&gt; in the protected network and the packet moves to the outside or unprotected network. CBAC is configured to inspect http traffic and there is an ACL on the inbound (outside interface) blocking http traffic from the unprotected network to the protected network. So the packet is allowed access to the unprotected network because the ACL is on the inbound interface and not the outbound interface. So the ACL does not look at the packet, CBAC however looks at the packet and in the inspection rules the packet is allowed access to the unprotected network, CBAC adds an entry in its state table. Because a new entry is added a dynamic ACL is created on the external interface to the protected network. This dynamic ACL will allow http traffic back into the protected network. This opening is only active it the session is open, once the session closes the ACL is removed. Once removed any traffic that starts from the unprotected network will be denied access to the protected network. This depends on the ACL which checks inbound connections from the unprotected network.&lt;a href=&#34;http://ciscoskills.net/2011/02/22/understanding-cbac/cbac-firewall-config/&#34;&gt;&lt;img src=&#34;http://systemstechblog.files.wordpress.com/2011/02/cbac-firewall-config.png?w=300&#34; alt=&#34;CBAC Firewall&#34; title=&#34;CBAC Firewall-config&#34;&gt;&lt;/a&gt; &lt;a href=&#34;http://systemstechblog.files.wordpress.com/2011/02/cbac-firewall-config.png&#34;&gt;&lt;/a&gt; To configure CBAC there are four steps to set up CBAC efficiently:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Pick an interface of where you want CBAC to be inspecting; this depends on the flow of your network and the amount of interfaces you have installed on your router. (DMZ, Web server, E-mail servers, etc.)&lt;/li&gt;
&lt;li&gt;Configure IP ACLs at the interface. The network technician must define what type of traffic is allowed and will not be inspected by CBAC and which traffic is blocked and will be inspected by CBAC.&lt;/li&gt;
&lt;li&gt;Define inspection rules. The network technician should specify each desired application layer to inspect along with generic TCP, ICMP and or UDP fields. Inspection rules are configured by statements each listing a protocol and specifying the inspection rule name.&lt;/li&gt;
&lt;li&gt;Finally apply the inspection rule to an interface.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;CBAC is considered the &amp;quot;classic&amp;quot; firewall compared to zone based, it is relatively simple to configure and understand. However unlike zone based CBAC can get complex when multiple CBAC configurations on a router exists. Remember CBAC also uses ACLs if configured and implemented poorly these ACLs can block traffic even when CBAC allows them. I hope this tutorial was helpful.&lt;/p&gt;

        
      </description>
    </item>
    
  </channel>
</rss>
