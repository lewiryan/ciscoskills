<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>AWS on Cisco Skills</title>
    <link>http://archive.ciscoskills.net.s3-website-us-west-2.amazonaws.com/tags/aws/</link>
    <description>Recent content in AWS on Cisco Skills</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sun, 11 Oct 2020 18:13:30 +0000</lastBuildDate><atom:link href="http://archive.ciscoskills.net.s3-website-us-west-2.amazonaws.com/tags/aws/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Fortigate ECMP with BGP</title>
      <link>http://archive.ciscoskills.net.s3-website-us-west-2.amazonaws.com/2020/10/fortigate-ecmp-with-bgp/</link>
      <pubDate>Sun, 11 Oct 2020 18:13:30 +0000</pubDate>
      
      <guid>http://archive.ciscoskills.net.s3-website-us-west-2.amazonaws.com/2020/10/fortigate-ecmp-with-bgp/</guid>
      <description>
        
          &lt;p&gt;It&#39;s like clock work...around this time the seasons are changing..autumn colors are out, and the colder air reminds us that things are changing around here, embrace it! One thing that I&#39;ve been working with is AWS Transit gateways, a common theme this year is all cloud! AWS Transit Gateways make it easier to move towards that!&lt;/p&gt;
&lt;p&gt;AWS Transit gateways relatively new, (couple years old now) so instead of attaching to each AWS VPC environment independently we can connect to the transit gateway and attach VPCs to the gateway. If you enable BGP your routes will propagate. I&#39;ve been working with ECMP, specifically with Fortigates.&lt;/p&gt;
&lt;p&gt;There are two ways to have redundancy in a network when you have multiple paths to a destination. Similar routes that have a higher cost/weight then ones that don&#39;t are only used when there is a problem with primary path. So you have a backup route on standby until the primary route fails. This could be a good option if the backup route isn&#39;t the same bandwidth/media or really not equal to the primary link which is why different cost/weight is important to have.&lt;/p&gt;
&lt;p&gt;However if you have multiple paths that were equal bandwidth/media we could/would want to use both of them at the same time so that traffic is load balanced across the network, this is called ECMP (Equal-cost multi-path routing)&lt;/p&gt;
&lt;p&gt;Let&#39;s walk though the steps on how to setup ECMP on a Fortigate using BGP. I&#39;m already guessing you have an AWS account with an AWS transit gateway deployed that supports ECMP, as well as configured your customer gateway in AWS with BGP Autonomous system (AS) number.&lt;/p&gt;
&lt;p&gt;In this example I have a Fortigate Firewall running version 6.4.2, I have set the BGP &amp;quot;AS&amp;quot; number to 65000 and the AWS &amp;quot;AS&amp;quot; number is 64512.&lt;/p&gt;
&lt;p&gt;Amazon gives you a text file to download the configuration for these two tunnels but depending on your Fortigate setup we may have to tweak the file, (not a good idea to just paste it) In this example here is what I have for tunnel one:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt; 1&lt;/span&gt;# Configure Phase 1 of the tunnel, aka IKE  
&lt;span class=&#34;ln&#34;&gt; 2&lt;/span&gt;config vpn ipsec phase1-interface  
&lt;span class=&#34;ln&#34;&gt; 3&lt;/span&gt;edit &amp;#34;AWS-0615bcc6f-1&amp;#34;  
&lt;span class=&#34;ln&#34;&gt; 4&lt;/span&gt;set dpd on-idle  
&lt;span class=&#34;ln&#34;&gt; 5&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 6&lt;/span&gt;# Outside Interface to reach AWS  
&lt;span class=&#34;ln&#34;&gt; 7&lt;/span&gt;set interface outside  
&lt;span class=&#34;ln&#34;&gt; 8&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt; 9&lt;/span&gt;# External IP address using (RFC 5737) in this example
&lt;span class=&#34;ln&#34;&gt;10&lt;/span&gt;set local-gw 198.51.100.1  
&lt;span class=&#34;ln&#34;&gt;11&lt;/span&gt;set dhgrp 2  
&lt;span class=&#34;ln&#34;&gt;12&lt;/span&gt;set proposal aes128-sha1  
&lt;span class=&#34;ln&#34;&gt;13&lt;/span&gt;set keylife 28800  
&lt;span class=&#34;ln&#34;&gt;14&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;15&lt;/span&gt;# Remote Peer this is AWS Transit, using (RFC 5737) in example`  
&lt;span class=&#34;ln&#34;&gt;16&lt;/span&gt;set remote-gw 192.0.2.124  
&lt;span class=&#34;ln&#34;&gt;17&lt;/span&gt;set psksecret ciscoskills.net  
&lt;span class=&#34;ln&#34;&gt;18&lt;/span&gt;set dpd-retryinterval 10  
&lt;span class=&#34;ln&#34;&gt;19&lt;/span&gt;next  
&lt;span class=&#34;ln&#34;&gt;20&lt;/span&gt;end  
&lt;span class=&#34;ln&#34;&gt;21&lt;/span&gt;  
&lt;span class=&#34;ln&#34;&gt;22&lt;/span&gt;# Configure Phase 2 of the Tunnel, aka IPSEC  
&lt;span class=&#34;ln&#34;&gt;23&lt;/span&gt;config vpn ipsec phase2-interface  
&lt;span class=&#34;ln&#34;&gt;24&lt;/span&gt;edit &amp;#34;AWS-0615bcc6f-1&amp;#34;  
&lt;span class=&#34;ln&#34;&gt;25&lt;/span&gt;set phase1name &amp;#34;AWS-0615bcc6f-1&amp;#34;  
&lt;span class=&#34;ln&#34;&gt;26&lt;/span&gt;set proposal aes128-sha1  
&lt;span class=&#34;ln&#34;&gt;27&lt;/span&gt;set dhgrp 2  
&lt;span class=&#34;ln&#34;&gt;28&lt;/span&gt;set pfs enable  
&lt;span class=&#34;ln&#34;&gt;29&lt;/span&gt;set keylifeseconds 3600  
&lt;span class=&#34;ln&#34;&gt;30&lt;/span&gt;end
&lt;span class=&#34;ln&#34;&gt;31&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;32&lt;/span&gt;# Build the tunnel interface  
&lt;span class=&#34;ln&#34;&gt;33&lt;/span&gt;config system interface   
&lt;span class=&#34;ln&#34;&gt;34&lt;/span&gt;edit &amp;#34;AWS-0615bcc6f-1&amp;#34;  
&lt;span class=&#34;ln&#34;&gt;35&lt;/span&gt;set vdom &amp;#34;root&amp;#34;  
&lt;span class=&#34;ln&#34;&gt;36&lt;/span&gt;set ip 169.254.150.142 255.255.255.255  
&lt;span class=&#34;ln&#34;&gt;37&lt;/span&gt;set allowaccess ping  
&lt;span class=&#34;ln&#34;&gt;38&lt;/span&gt;set type tunnel  
&lt;span class=&#34;ln&#34;&gt;39&lt;/span&gt;set tcp-mss 1379  
&lt;span class=&#34;ln&#34;&gt;40&lt;/span&gt;set remote-ip 169.254.150.141/32  
&lt;span class=&#34;ln&#34;&gt;41&lt;/span&gt;set mtu enable  
&lt;span class=&#34;ln&#34;&gt;42&lt;/span&gt;set mtu 1427  
&lt;span class=&#34;ln&#34;&gt;43&lt;/span&gt;set interface &amp;#34;outside&amp;#34;  
&lt;span class=&#34;ln&#34;&gt;44&lt;/span&gt;next  
&lt;span class=&#34;ln&#34;&gt;45&lt;/span&gt;end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;After the tunnel one is created, AWS gives us configuration for the second tunnel, basically the same configuration with some differences, here is tunnel two.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt; 1&lt;/span&gt;# Configure Phase 1 of the tunnel, aka IKE  
&lt;span class=&#34;ln&#34;&gt; 2&lt;/span&gt;  
&lt;span class=&#34;ln&#34;&gt; 3&lt;/span&gt;config vpn ipsec phase1-interface  
&lt;span class=&#34;ln&#34;&gt; 4&lt;/span&gt;edit &amp;#34;AWS-0615bcc6f-2&amp;#34;  
&lt;span class=&#34;ln&#34;&gt; 5&lt;/span&gt;set dpd on-idle  
&lt;span class=&#34;ln&#34;&gt; 6&lt;/span&gt;# Outside Interface to reach AWS  
&lt;span class=&#34;ln&#34;&gt; 7&lt;/span&gt;set interface outside  
&lt;span class=&#34;ln&#34;&gt; 8&lt;/span&gt;# External IP address using (RFC 5737) in this example  
&lt;span class=&#34;ln&#34;&gt; 9&lt;/span&gt;set local-gw 198.51.100.1  
&lt;span class=&#34;ln&#34;&gt;10&lt;/span&gt;set dhgrp 2  
&lt;span class=&#34;ln&#34;&gt;11&lt;/span&gt;set proposal aes128-sha1  
&lt;span class=&#34;ln&#34;&gt;12&lt;/span&gt;set keylife 28800  
&lt;span class=&#34;ln&#34;&gt;13&lt;/span&gt;# Remote Peer this is AWS Transit, using (RFC 5737) in example  
&lt;span class=&#34;ln&#34;&gt;14&lt;/span&gt;set remote-gw 203.0.113.25  
&lt;span class=&#34;ln&#34;&gt;15&lt;/span&gt;set psksecret ciscoskills.com  
&lt;span class=&#34;ln&#34;&gt;16&lt;/span&gt;set dpd-retryinterval 10  
&lt;span class=&#34;ln&#34;&gt;17&lt;/span&gt;next  
&lt;span class=&#34;ln&#34;&gt;18&lt;/span&gt;end  
&lt;span class=&#34;ln&#34;&gt;19&lt;/span&gt;  
&lt;span class=&#34;ln&#34;&gt;20&lt;/span&gt;# Configure Phase 2 of the Tunnel, aka IPSEC  
&lt;span class=&#34;ln&#34;&gt;21&lt;/span&gt;  
&lt;span class=&#34;ln&#34;&gt;22&lt;/span&gt;config vpn ipsec phase2-interface  
&lt;span class=&#34;ln&#34;&gt;23&lt;/span&gt;edit &amp;#34;AWS-0615bcc6f-2&amp;#34;  
&lt;span class=&#34;ln&#34;&gt;24&lt;/span&gt;set phase1name &amp;#34;AWS-0615bcc6f-2&amp;#34;  
&lt;span class=&#34;ln&#34;&gt;25&lt;/span&gt;set proposal aes128-sha1  
&lt;span class=&#34;ln&#34;&gt;26&lt;/span&gt;set dhgrp 2  
&lt;span class=&#34;ln&#34;&gt;27&lt;/span&gt;set pfs enable  
&lt;span class=&#34;ln&#34;&gt;28&lt;/span&gt;set keylifeseconds 3600  
&lt;span class=&#34;ln&#34;&gt;29&lt;/span&gt;end  
&lt;span class=&#34;ln&#34;&gt;30&lt;/span&gt;  
&lt;span class=&#34;ln&#34;&gt;31&lt;/span&gt;# Build the tunnel interface  
&lt;span class=&#34;ln&#34;&gt;32&lt;/span&gt;config system interface  
&lt;span class=&#34;ln&#34;&gt;33&lt;/span&gt;edit &amp;#34;AWS-0615bcc6f-2&amp;#34;  
&lt;span class=&#34;ln&#34;&gt;34&lt;/span&gt;set vdom &amp;#34;root&amp;#34;  
&lt;span class=&#34;ln&#34;&gt;35&lt;/span&gt;set ip 169.254.157.90 255.255.255.255  
&lt;span class=&#34;ln&#34;&gt;36&lt;/span&gt;set allowaccess ping  
&lt;span class=&#34;ln&#34;&gt;37&lt;/span&gt;set type tunnel  
&lt;span class=&#34;ln&#34;&gt;38&lt;/span&gt;set tcp-mss 1379  
&lt;span class=&#34;ln&#34;&gt;39&lt;/span&gt;set remote-ip 169.254.157.89/32  
&lt;span class=&#34;ln&#34;&gt;40&lt;/span&gt;set mtu enable  
&lt;span class=&#34;ln&#34;&gt;41&lt;/span&gt;set mtu 1427  
&lt;span class=&#34;ln&#34;&gt;42&lt;/span&gt;set interface &amp;#34;outside&amp;#34;  
&lt;span class=&#34;ln&#34;&gt;43&lt;/span&gt;next  
&lt;span class=&#34;ln&#34;&gt;44&lt;/span&gt;end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We now have two tunnels configured, these won&#39;t show online until the Fortigate has a policy attached to them. So you could put firewall rules on each tunnel interface or better yet is to create a zone within the Fortigate and add the two tunnel interfaces into same zone. By creating a zone within Fortigate the same firewall rules apply to each interface instead of creating/copying rules to each tunnel interface. (This would be an example)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;config system zone  
&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;edit AWS-0615bcc6f  
&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;set interface AWS-0615bcc6f-1  
&lt;span class=&#34;ln&#34;&gt;4&lt;/span&gt;set interface AWS-0615bcc6f-2  
&lt;span class=&#34;ln&#34;&gt;5&lt;/span&gt;set intrazone allow  
&lt;span class=&#34;ln&#34;&gt;6&lt;/span&gt;next  
&lt;span class=&#34;ln&#34;&gt;7&lt;/span&gt;end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Once those interfaces are either in a zone and in a Firewall policy you should be able to bring those tunnel interfaces online. The final thing is configure our Fortigate with BGP so that when you attach a VPC to the transit gateway that IP space gets advertised automatically. We also want to enable ECMP with BGP.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt; 1&lt;/span&gt;# Enable BGP on the Fortigate  
&lt;span class=&#34;ln&#34;&gt; 2&lt;/span&gt;  
&lt;span class=&#34;ln&#34;&gt; 3&lt;/span&gt;config router bgp  
&lt;span class=&#34;ln&#34;&gt; 4&lt;/span&gt;# This is the number we set in AWS, so it should match what TG has  
&lt;span class=&#34;ln&#34;&gt; 5&lt;/span&gt;set as 65000   
&lt;span class=&#34;ln&#34;&gt; 6&lt;/span&gt;set router-id `198.51.100.1`  
&lt;span class=&#34;ln&#34;&gt; 7&lt;/span&gt;  
&lt;span class=&#34;ln&#34;&gt; 8&lt;/span&gt;# Since we are using &amp;#34;AS&amp;#34; Numbers, we tell the Fortigate to use    
&lt;span class=&#34;ln&#34;&gt; 9&lt;/span&gt;# External Multipath with out it BGP will use one route at time  
&lt;span class=&#34;ln&#34;&gt;10&lt;/span&gt;# Active/Passive  
&lt;span class=&#34;ln&#34;&gt;11&lt;/span&gt;  
&lt;span class=&#34;ln&#34;&gt;12&lt;/span&gt;set ebgp-multipath enable  
&lt;span class=&#34;ln&#34;&gt;13&lt;/span&gt;config neighbor  
&lt;span class=&#34;ln&#34;&gt;14&lt;/span&gt;edit &amp;#34;169.254.157.89&amp;#34;  
&lt;span class=&#34;ln&#34;&gt;15&lt;/span&gt;set remote-as 64512  
&lt;span class=&#34;ln&#34;&gt;16&lt;/span&gt;next  
&lt;span class=&#34;ln&#34;&gt;17&lt;/span&gt;edit &amp;#34;169.254.150.141&amp;#34;  
&lt;span class=&#34;ln&#34;&gt;18&lt;/span&gt;set remote-as 64512  
&lt;span class=&#34;ln&#34;&gt;19&lt;/span&gt;next  
&lt;span class=&#34;ln&#34;&gt;20&lt;/span&gt;end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If we attached a VPC to the transit gateway, and in this example I attached a VPC range of 10.0.0.0/16 to the transit gateway. That IP range would show up in the Fortigate, if we look at the routing table via &lt;em&gt;get router info routing-table all&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt; 1&lt;/span&gt;FW01 # get router info routing-table all  
&lt;span class=&#34;ln&#34;&gt; 2&lt;/span&gt;Codes: K - kernel, C - connected, S - static, R - RIP, B - BGP  
&lt;span class=&#34;ln&#34;&gt; 3&lt;/span&gt;O - OSPF, IA - OSPF inter area  
&lt;span class=&#34;ln&#34;&gt; 4&lt;/span&gt;N1 - OSPF NSSA external type 1, N2 - OSPF NSSA external type 2  
&lt;span class=&#34;ln&#34;&gt; 5&lt;/span&gt;E1 - OSPF external type 1, E2 - OSPF external type 2  
&lt;span class=&#34;ln&#34;&gt; 6&lt;/span&gt;i - IS-IS, L1 - IS-IS level-1, L2 - IS-IS level-2, ia - IS-IS inter area  
&lt;span class=&#34;ln&#34;&gt; 7&lt;/span&gt;- candidate default  
&lt;span class=&#34;ln&#34;&gt; 8&lt;/span&gt;  
&lt;span class=&#34;ln&#34;&gt; 9&lt;/span&gt;Routing table for VRF=0  
&lt;span class=&#34;ln&#34;&gt;10&lt;/span&gt;S* 0.0.0.0/0 [5/0] via `198.51.100.`25, ppp1  
&lt;span class=&#34;ln&#34;&gt;11&lt;/span&gt;B 10.0.0.0/16 [20/100] via 169.254.150.141, AWS-0615bcc6f-1, 03:07:57  
&lt;span class=&#34;ln&#34;&gt;12&lt;/span&gt;              [20/100] via 169.254.157.89, AWS-0615bcc6f-2, 03:07:57  
&lt;span class=&#34;ln&#34;&gt;13&lt;/span&gt;C `198.51.100.1`/32 is directly connected, ppp1  
&lt;span class=&#34;ln&#34;&gt;14&lt;/span&gt;C 169.254.150.141/32 is directly connected, AWS-0615bcc6f-1  
&lt;span class=&#34;ln&#34;&gt;15&lt;/span&gt;C 169.254.150.142/32 is directly connected, AWS-0615bcc6f-1  
&lt;span class=&#34;ln&#34;&gt;16&lt;/span&gt;C 169.254.157.89/32 is directly connected, AWS-0615bcc6f-2  
&lt;span class=&#34;ln&#34;&gt;17&lt;/span&gt;C 169.254.157.90/32 is directly connected, AWS-0615bcc6f-2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We can see that 10.0.0.0/16 is available to us via the VPN interfaces, we have equal paths as well, traffic will load balance between each tunnel interface. BGP with ECMP is alive and active! ... That&#39;s all I got for this post, like always I hope this information is helpful, got questions? Comment below!&lt;/p&gt;

        
      </description>
    </item>
    
    <item>
      <title>Graylog with AWS Elasticsearch</title>
      <link>http://archive.ciscoskills.net.s3-website-us-west-2.amazonaws.com/2019/06/graylog-with-aws-elasticsearch/</link>
      <pubDate>Fri, 21 Jun 2019 18:05:55 +0000</pubDate>
      
      <guid>http://archive.ciscoskills.net.s3-website-us-west-2.amazonaws.com/2019/06/graylog-with-aws-elasticsearch/</guid>
      <description>
        
          &lt;p&gt;Graylog has been through some changes last time I talked about them, hitting version 3.0 in February is awesome and one of things that make Graylog run well is Elasticsearch backend. Although Elasticsearch is not too hard to setup it usually runs better on bare metal, so there is cost of that as well as maintenance of the cluster is important, updates and upgrades. Depending your team experience you may not have time to learn it or run it the way it should be. That last thing you want is your logging setup to go down because of poor maintenance. So in this post we will walk though setting up a Graylog Server and using AWS Elasticsearch service for our backend. Without having a quick Elasticsearch cluster Graylog experience suffers, so let&#39;s get started.&lt;/p&gt;
&lt;p&gt;The first thing and easiest thing is to spin up an Elasticsearch cluster within AWS. Depending on your use case you may only want a development deployment (single-node) or you can do a 3 or 2 node cluster within different availability zones within AWS, so its up to you and your wallet ;) of how big or small you want this Elasticsearch resource.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Additional security protections are recommended if this going to be used for production, like one example is don&#39;t open Elasticsearch to the internet without ACLs in place!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;If you want more information about Elasticsearch service that AWS provides go ahead and read AWS Developer Guide - &lt;a href=&#34;https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/what-is-amazon-elasticsearch-service.html&#34;&gt;Amazon Elasticsearch Service.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Once your cluster is up and running, keep note of the Endpoint URL you will need that for Graylog. In this example I&#39;m using Centos 7 for the Graylog Server and depending on the operating system you are using for the Graylog server follow the instructions on &lt;a href=&#34;http://docs.graylog.org/en/latest/pages/installation/operating_system_packages.html&#34;&gt;Graylog&#39;s Read the Docs&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;No need for me to repeat installation steps, in this example I&#39;m using Centos 7 and followed the &lt;a href=&#34;http://docs.graylog.org/en/latest/pages/installation/os/centos.html&#34;&gt;documentation&lt;/a&gt;. Since we have an Elasticsearch cluster provided by AWS you don&#39;t need to anything related to Elasticsearch when installing Graylog, so skip it. Once you have Graylog installed go ahead and start it up to make sure you get the webpage and can login. This just verifies you have a working Graylog server ready to go. You might see some errors related to indexing but that is expected, we have not told Graylog about our AWS Elasticsearch resource.
&lt;img src=&#34;http://archive.ciscoskills.net.s3-website-us-west-2.amazonaws.com/images/2019/04/graylog-es-aws.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Login into your Graylog server and with your favorite text editor open the Graylog server configuration file /etc/graylog/server/server.conf We are looking to modify the Elasticsearch hosts by default its local host to the Endpoint URL that is in your AWS Elasticsearch resource.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;# List of Elasticsearch hosts Graylog should connect to.
&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;# Need to be specified as a comma-separated list of valid URIs for the http ports of your elasticsearch nodes.
&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;# If one or more of your elasticsearch hosts require authentication, include the credentials in each node URI that
&lt;span class=&#34;ln&#34;&gt;4&lt;/span&gt;# requires authentication.
&lt;span class=&#34;ln&#34;&gt;5&lt;/span&gt;#
&lt;span class=&#34;ln&#34;&gt;6&lt;/span&gt;# Default: http://127.0.0.1:9200
&lt;span class=&#34;ln&#34;&gt;7&lt;/span&gt;elasticsearch\_hosts = https://search-24726754557.us-west-2.es.amazonaws.com/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Restart the Graylog server service&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;systemctl restart graylog-server
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You now have Graylog server backed by an AWS Elasticsearch Cluster, log away :)
&lt;img src=&#34;http://archive.ciscoskills.net.s3-website-us-west-2.amazonaws.com/images/2019/04/graylog-es-aws-1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;AWS makes deploying Graylog even easier if you don&#39;t want to have your own Elasticsearch cluster. Although you can&#39;t stop the AWS ES Cluster you can snapshot the data to an S3 bucket and import it back into a new ES cluster and connect Graylog back to it. This makes it so you don&#39;t have this running 24x7, maybe useful for temporary debugging logs or run it 24x7. Well that&#39;s all I got for a Friday, and its the first day of summer &amp;quot;officially&amp;quot; so time enjoy it! I do hope this information is helpful but also enjoy your summer! 8-)&lt;/p&gt;

        
      </description>
    </item>
    
  </channel>
</rss>
